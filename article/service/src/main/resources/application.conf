thread-pool {
  size: 10
  db-connection-size = 10
  shutdown-timeout-seconds = 30
}

main-thread-pool {
  size: 100
}

db-thread-pool {
  size: 20
}

amqp {
  host: "127.0.0.1"
  host: ${?AMQP_HOST}
  port: 5672
  username: "guest"
  password: "guest",
  publishing-timeout: 30 seconds
}

db {
  driver-class-name = "org.postgresql.Driver"
  url = "jdbc:postgresql://127.0.0.1:5432/article"
  url = ${?DB_LINK}
  user = "article"
  pass = "article"
}

http-server {
  port: 9000
  address: "0.0.0.0"
}

http-client {
  max-wait-queue: 1500
  idle-timeout: 30 seconds
  response-header-timeout: 60 seconds
}

elevio-service {
  base-path: "https://api.elev.io"
  version: "v1"
  jwt-token: "???"
  jwt-token: ${?ELEVIO_TOKEN}
  api-key: "????"
  api-key: ${?ELEVIO_API_KEY}
}

article-service {
  items-per-page: 100
}

kamon {
  environment {
    service = "article"
    host = "auto"
    instance = "auto"
    tags {
      ip = "127.0.0.1"
    }
  }

  influxdb {
    hostname = "127.0.0.1"
    hostname = ${?INFLUX_HOST}
    port = 8086
    database = "article"
    percentiles = [50.0, 70.0, 90.0, 95.0, 99.0, 99.9]
    protocol = "http"
    authentication {
      user = "user"
      password = "password"
    }
    additional-tags {
      service = yes
      host = yes
      instance = yes
      blacklisted-tags = []
    }
  }

  reporters = ["kamon.zipkin.ZipkinReporter"]
  scheduler-pool-size = 2
  trace {
    tick-interval = 10 seconds
    reporter-queue-size = 4096
    join-remote-parents-with-same-span-id = yes
    sampler = "random"
    random-sampler {
      probability = 1
    }
    identity-provider = "kamon.trace.IdentityProvider$Default"
    span-metrics {
      scope-spans-to-parent = yes
    }
  }
  logback {
    mdc-context-propagation = on
    mdc-trace-id-key = traceID
    mdc-span-id-key = spanID
  }
  jdbc {
    slow-query-threshold = 2 seconds
  }
  executors {
    sample-interval = 500 milliseconds
  }
  http4s {
    name-generator = "elevio.service.tracing.UriToOperationNameGenerator"
    add-http-status-code-as-metric-tag = true
  }
  zipkin {
    host = "localhost"
    host = ${?ZIPKIN_HOST}
    port = 9411
  }
  system-metrics {
    host.enabled = false
    jmx.enabled = true
  }
  bucky {
    publish {
      add-routing-key-as-metric-tag: false
    }
    consume {
      add-routing-key-as-metric-tag: false
    }
  }
}